<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Thezmmm</title>
    <link>https://thezmmm.github.io/post/</link>
    <description>Recent content in Posts on Thezmmm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Thezmmm</copyright>
    <lastBuildDate>Mon, 12 Sep 2022 10:30:53 +0800</lastBuildDate><atom:link href="https://thezmmm.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Queue</title>
      <link>https://thezmmm.github.io/post/javaqueue/</link>
      <pubDate>Mon, 12 Sep 2022 10:30:53 +0800</pubDate>
      
      <guid>https://thezmmm.github.io/post/javaqueue/</guid>
      <description>Queue 队列是一种FIFO( First In First Out)型的线性结构
Queue的实现类有LinkedList和PriorityQueue。最常用的实现类是LinkedList
Queue queue = new LinkedList();  // add() 和 remove() 在失败时会抛出异常  // 添加元素 queue.offer(1); // 删除元素 queue.poll(); // 查看队首元素 queue.peek(); // 获取队列长度 queue.size() Deque 普通队列可以从队尾添加元素，从队首删除元素，而**双端队列( double ended queue )**可以在两头进行添加和删除
示例 Deque deque = new LinkedList();  // add() 和 remove() 在失败时会抛出异常  // 添加元素 deque.offerFirst(1); deque.offerLast(1); // 删除元素 deque.pollFirst(); deque.pollLast(); // 查看元素 deque.peekFirst(); deque.peekLast(); // 获取队列长度 deque.size() Deque的堆栈操作 Java堆栈的Stack已经过时，官方推荐使用Deque替代Stack使用
Deque的堆栈操作方法：
 push() : 等效于addFirst() pop() : 等效于removeFirst() peek() : 等效于peekFirst()  Priority queue PriorityQueue，即优先队列。优先级队列可以保证每次取出来的元素都是队列中的最小或最大的元素（Java优先级队列默认每次取出来的为最小元素）</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://thezmmm.github.io/post/sys-linux/</link>
      <pubDate>Mon, 05 Sep 2022 10:30:53 +0800</pubDate>
      
      <guid>https://thezmmm.github.io/post/sys-linux/</guid>
      <description>Linux 系统目录结构  /  /bin 存放最常使用的命令 /sbin s为super user，存放系统管理员使用的系统管理程序 /home 存放普通用户的主目录  /alice /bob /eve   /root 系统管理员的用户主目录 /lib 动态链接共享库 /lost+found 系统非法关机后存放一些文件，一般为空 /etc 配置文件和子目录 /user 应用程序和文件存放目录  /local 给主机额外安装软件所安装的目录   /boot 启动Linux使用的一些核心文件，包括一些链接文件及镜像文件 /proc 系统内存的映射 /srv service，服务启动之后需要提取的数据 /sys /tmp 存放临时文件 /dev 把所有**硬件(device)**用文件的形式存储 /media 把识别的设备(如U盘，光驱等)挂载到此目录下 /mnt 让用户临时挂载别的文件系统，可以将外部存储挂载在/mnt/上 /opt 给主机额外安装软件所摆放的目录 /var 存放不断被扩充的内容，包括各种日志文件 /selinux security-enhanced linux 安全子系统    系统重要文件 系统网卡配置文件 文件路径 系统网卡文件默认名称 /etc/sysconfig/network-scripts/ifcfg-ens33
系统网卡文件常用名称 /etc/sysconfig/network-scripts/ifcfg-eth0
文件介绍 这是Linux系统第一块网卡的配置文件所在路径，其中第一块网卡配置文件的结尾标识为eth0(ens33)，第二块为eth1(ens34)，以此类推
执行 nmtui 命令来修改网卡配置时，实际上是在编辑 /etc/sysconfig/network-scripts/ifcfg-eth0 这个文件</description>
    </item>
    
    <item>
      <title>IELTSSpeaking</title>
      <link>https://thezmmm.github.io/post/ieltsspeaking/</link>
      <pubDate>Sat, 06 Aug 2022 18:14:49 +0800</pubDate>
      
      <guid>https://thezmmm.github.io/post/ieltsspeaking/</guid>
      <description>Part 2 12-16句
People Celebrity Describe a popular/well-known person in your country.
You should say:
  Who this person is
 identity  有名气的 ：well-received / go down very well   personal info  born in university competition / champion / medals   physical appearance  胖 ：over-weight / big-boned 瘦 ：thin / slim 性格 ：extroverted 外向的， enthusiastic 热情的，versatile 多才多艺的，compassionate 有同情心的， benevolent 乐善好施的      What he/she has done</description>
    </item>
    
    <item>
      <title>IELTSWriting</title>
      <link>https://thezmmm.github.io/post/ieltswriting/</link>
      <pubDate>Mon, 01 Aug 2022 20:33:58 +0800</pubDate>
      
      <guid>https://thezmmm.github.io/post/ieltswriting/</guid>
      <description>Standards  TA : Task Achievement 任务完成 TR : Task Response 任务回应 CC : Coherence &amp;amp; Cohesion 内容连贯与篇章衔接 LR : Lexical Resource 词汇资源 GRA : Grammatical Range and Accuracy 语法范围与精准性  Task1 First paragraph   改写题目 (换词 + 换句型) 能换就换  table -&amp;gt; chart/diagram
  delete below
  information -&amp;gt; data/statistics/numbers/figures
  show -&amp;gt; illustrate/describe/depict/give information about/give/outline/reveal/indicate/present/provide an overview of/compare(永远为一般现在时)
  proportion -&amp;gt; num + percent(百分之多少) / percentage(百分比)/share</description>
    </item>
    
    <item>
      <title>JavaString</title>
      <link>https://thezmmm.github.io/post/javastring/</link>
      <pubDate>Sat, 16 Jul 2022 14:50:56 +0800</pubDate>
      
      <guid>https://thezmmm.github.io/post/javastring/</guid>
      <description>查找   char charAt(int index)
返回指定索引处的 char 值
  boolean contains(CharSequence chars)
判断字符串中是否包含指定的字符或字符串
  int indexOf(int ch )
int indexOf(int ch, int fromIndex)
int indexOf(String str)
int indexOf(String str, int fromIndex)
  ch ：字符，Unicode 编码。
  fromIndex ：开始搜索的索引位置，第一个字符是 0 ，第二个是 1 ，以此类推。
  str ：要搜索的子字符串
  返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1
  int lastIndexOf(int ch)
int lastIndexOf(int ch, int fromIndex)
int lastIndexOf(String str)
int lastIndexOf(String str, int fromIndex)</description>
    </item>
    
    <item>
      <title>Matlab</title>
      <link>https://thezmmm.github.io/post/matlab/</link>
      <pubDate>Wed, 01 Jun 2022 13:01:27 +0800</pubDate>
      
      <guid>https://thezmmm.github.io/post/matlab/</guid>
      <description>Command Line Terminal help format format dataType指定数字的格式
who 显示当前有哪些变量
whos 显示当前变量的详细信息
clear 清除所有变量，后加变量名则清除单个变量
; 句末加分号，不显示计算结果
方向键 显示历史命令
clc 清屏
time tic command toc % count the time of runing command Matrix 矩阵的输入 Row vector:a = [1 2 3]Column vector:	b = [1;2;3] Array Indexing  A(row.column)  A([row1 row2],[column1 column2]) 得到交集   A(index)  A([index1 index2 index3]) A([index1 index2;index3 index4])    Replacing Entries delete row: A(row,:) = []</description>
    </item>
    
    <item>
      <title>TestHome</title>
      <link>https://thezmmm.github.io/post/testhome/</link>
      <pubDate>Fri, 20 May 2022 13:01:27 +0800</pubDate>
      
      <guid>https://thezmmm.github.io/post/testhome/</guid>
      <description>test home</description>
    </item>
    
  </channel>
</rss>
